{"version":3,"sources":["Component/APIKEY.js","Component/Redux /reducers/reducer.js","Component/Redux /reducers/rootReducers.js","Component/Redux /actions.js","Component/Redux /store.js","Component/Nav.js","Component/main/spin_baby.js","Component/main/MovieCart.js","Component/main/movies.js","Component/main/Search_form.js","Component/main/Main.js","Component/Footer.js","Component/main/SingleMovie.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","APIKEY","init_state","text","movies","loading","movie","combineReducers","state","action","type","console","log","payload","res","middleware","thunk","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","RootReducers","applyMiddleware","Nav","className","rel","to","id","Spin_baby","MovieCart","Title","Year","Poster","imdbID","src","alt","connect","error","map","item","index","key","Search","dispatch","Submit","axios","get","then","data","catch","err","IsLoading","onSubmit","e","preventDefault","name","placeholder","onChange","currentTarget","value","Footer","href","target","SingleMovie","this","props","match","params","Genre","Released","imdbRating","Director","Writer","Actors","Plot","Rated","Component","App","exact","path","component","Main","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.631f5911.chunk.js","sourcesContent":["module.exports = {\n  APIKEY: \"bb5de772\",\n};\n//http://www.omdbapi.com/?apikey=[yourkey]&\n//http://img.omdbapi.com/?apikey=[yourkey]&\n","import { SEARCH, SUBMIT, GETMOVIE, LOADING } from \"../actions\";\nconst init_state = {\n  text: \"\",\n  movies: [],\n  loading: false,\n  movie: [],\n};\n\nexport default (state = init_state, action) => {\n  switch (action.type) {\n    case SEARCH:\n      console.log(`search key word ${action.payload.text}`);\n      return {\n        ...state,\n        text: action.payload.text,\n        loading: false,\n      };\n    case SUBMIT:\n      console.log(action.payload.res);\n      return {\n        ...state,\n        movies: action.payload.res,\n        loading: false,\n      };\n\n    case GETMOVIE:\n      console.log(\"get movie\");\n      console.log(action.payload.res);\n      return {\n        ...state,\n        movie: action.payload.res,\n        loading: false,\n      };\n    case LOADING:\n      console.log(\"loadinf is true\");\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return { ...state, loading: false };\n  }\n};\n","import { combineReducers } from \"redux\";\nimport search_sec from \"./reducer\";\nexport default combineReducers({\n  movies: search_sec,\n});\n","import axios from \"axios\";\nimport { APIKEY } from \"../APIKEY\";\nexport const SEARCH = \"SEARCH\";\nexport const SUBMIT = \"SUBMIT\";\nexport const GETMOVIE = \"GETMOVIE\";\nexport const LOADING = \"LOADING\";\n\nexport const Search = (text) => (dispatch) => {\n  dispatch({ type: SEARCH, payload: { text } });\n};\nexport const Submit = (text) => (dispatch) => {\n  axios\n    .get(`https://www.omdbapi.com/?apikey=${APIKEY}&S=${text}`)\n    .then((res) =>\n      dispatch({\n        type: SUBMIT,\n        payload: { res: res.data.Search },\n      })\n    )\n    .catch((err) => console.log(err));\n};\nexport const IsLoading = () => (dispatch) => {\n  dispatch({ type: LOADING });\n};\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport RootReducers from \"./reducers/rootReducers\";\nconst middleware = [thunk];\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  RootReducers,\n  /* preloadedState, */ composeEnhancers(applyMiddleware(...middleware))\n);\nexport default store;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction Nav() {\n  return (\n    <div>\n      <div>\n        <nav className=\"navbar navbar-light bg-dark mb-5\">\n          <div className=\"container\">\n            <div className=\"navbar-header\">\n              <Link\n                rel=\"noopener noreferrer\"\n                className=\"navbar-brand text-white text-lg brand-text\"\n                to=\"/\"\n              >\n                MovieSeriesInfo\n              </Link>\n            </div>\n            <ul className=\"navbar-nav ml-auto text-light d-inline-block\">\n              <li className=\"nav-item d-inline-block mr-4\">\n                <i className=\"fab fa-imdb fa-5x\" id=\"imdb-logo\" />\n              </li>\n              <li className=\"nav-item d-inline-block mr-4\">\n                <i className=\"fab fa-react fa-5x\" id=\"react-logo\" />\n              </li>\n            </ul>\n          </div>\n        </nav>\n      </div>\n    </div>\n  );\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Spin_baby() {\n  return <i className=\"fa fa-spinner fa-spin text-dark fa-5x\"></i>;\n}\n\nexport default Spin_baby;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nfunction MovieCart({ Title, Year, Poster, imdbID }) {\n  return (\n    <div className=\"col-md-3 mb-5\">\n      <div className=\"card card-body bg-dark text-center h-100\">\n        <img className=\"w-100 mb-2\" src={Poster} alt=\"Movie Cover\" />\n        <h5 className=\"text-light card-title\">\n          {Title} - {Year}\n        </h5>\n        <Link className=\"btn btn-primary\" to={\"/movie/\" + imdbID}>\n          Movie Details\n          <i className=\"fas fa-chevron-right\" />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default MovieCart;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport MovieCart from \"./MovieCart\";\nfunction Movies({ movies = [], error }) {\n  return (\n    <div className=\"row\">\n      {movies.map((item, index) => (\n        <MovieCart key={index} {...item} />\n      ))}\n    </div>\n  );\n}\nconst MapStateToProps = (state) => {\n  return {\n    movies: state.movies.movies,\n  };\n};\nexport default connect(MapStateToProps)(Movies);\n","import React from \"react\";\nimport { Search, Submit, IsLoading } from \"../Redux /actions\";\nimport { connect } from \"react-redux\";\nfunction Search_form({ Search, Submit, text, IsLoading }) {\n  const onChange = (e) => {\n    Search(e.currentTarget.value);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    Submit(text);\n    IsLoading();\n  };\n  return (\n    <div className=\"jumbotron jumbotron-fluid mt-5 text-center\">\n      <div className=\"container\">\n        <h1 className=\"display-4 mb-3\">\n          <i className=\"fa fa-search\" /> Search for a movie ,TV series ..\n        </h1>\n        {/* Search form  */}\n        <form id=\"searchForm\" onSubmit={(e) => onSubmit(e)}>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"searchText\"\n            placeholder=\"Search Movies, TV Series ...\"\n            onChange={(e) => onChange(e)}\n          />\n          <button type=\"submit\" className=\"btn btn-primary btn-bg mt-3\">\n            Search\n          </button>\n        </form>\n        {/* end of search form */}\n      </div>\n    </div>\n  );\n}\nconst mapStateToProps = (state) => {\n  return {\n    text: state.movies.text,\n  };\n};\nexport default connect(mapStateToProps, { Search, Submit, IsLoading })(\n  Search_form\n);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport Spinner from \"./spin_baby\";\nimport Movies from \"./movies\";\nimport Form from \"./Search_form\";\nfunction Main({ loading }) {\n  return (\n    <div className=\"text-center\">\n      <Form />\n      {loading ? <Spinner /> : <Movies />}\n    </div>\n  );\n}\nconst MapStateToProps = (state) => {\n  return { loading: state.movies.loading };\n};\nexport default connect(MapStateToProps)(Main);\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <div>\n      <div className=\"row\">\n        <div className=\"col-md-12\">\n          <div className=\"footer p-3 mt-4 text-center bg-dark text-light\">\n            Developed By:\n            <a\n              href=\"https://github.com/khali70\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"text-warning font-weight-normal\"\n            >\n              Ahmed Khalifa\n            </a>\n            , Using <i className=\"fab fa-react\" /> React JS &amp; Redux JS\n            integrated with external movies data API\n            <a\n              href=\"https://www.omdbapi.com/\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              OMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { APIKEY } from \"../APIKEY\";\nimport { GETMOVIE, LOADING } from \"../Redux /actions\";\nimport Spinner from \"./spin_baby\";\n\nclass SingleMovie extends Component {\n  componentDidMount() {\n    axios\n      .get(\n        `http://www.omdbapi.com/?apikey=${APIKEY}&i=${this.props.match.params.id}`\n      )\n      .then((res) =>\n        this.props.dispatch({ type: GETMOVIE, payload: { res: res.data } })\n      )\n      .catch((err) => console.log(err));\n    this.props.dispatch({ type: LOADING });\n  }\n  render() {\n    const {\n      Title,\n      Genre,\n      Released,\n      imdbRating,\n      Director,\n      Writer,\n      Actors,\n      Plot,\n      imdbID,\n      Poster,\n      Rated,\n    } = this.props.movie;\n\n    return (\n      <>\n        {this.props.loading ? (\n          <Spinner />\n        ) : (\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-4 card card-body\">\n                <img src={Poster} className=\"thumbnail\" alt=\"Poster\" />\n              </div>\n              <div className=\"col-md-8\">\n                <h2 className=\"mb-4\">{Title}</h2>\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">\n                    <strong>Genre:</strong> {Genre}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Released:</strong> {Released}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Rated:</strong> {Rated}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>IMDB Rating:</strong> {imdbRating}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Director:</strong> {Director}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Writer:</strong> {Writer}\n                  </li>\n                  <li className=\"list-group-item\">\n                    <strong>Actors:</strong> {Actors}\n                  </li>\n                </ul>\n              </div>\n            </div>\n            <div className=\"row\">\n              <div className=\"card card-body bg-dark my-5 text-light\">\n                <div className=\"col-md-12\">\n                  <h3>About </h3>\n                  {Plot}\n                  <hr />\n                  <a\n                    href={\"https://www.imdb.com/title/\" + imdbID}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    className=\"btn btn-primary\"\n                  >\n                    View on IMDB\n                  </a>\n                  <Link to=\"/\" className=\"btn btn-default text-light\">\n                    Go Back To Search\n                  </Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </>\n    );\n  }\n}\nconst MapStateToProps = (state) => {\n  return {\n    movie: state.movies.movie,\n    loading: state.movies.loading,\n  };\n};\nexport default connect(MapStateToProps)(SingleMovie);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport store from \"./Component/Redux /store\";\nimport NavBar from \"./Component/Nav\";\nimport Main from \"./Component/main/Main\";\nimport Footer from \"./Component/Footer\";\nimport SingleMovie from \"./Component/main/SingleMovie\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nfunction App() {\n  // TODO deploy error cant fetch\n  return (\n    <Provider store={store}>\n      <Router>\n        <>\n          <NavBar />\n          <Route exact path=\"/\" component={Main} />\n          <Route exact path=\"/movie/:id\" component={SingleMovie} />\n          <Footer />\n        </>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}